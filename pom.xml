
<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<!-- for versions
	<prerequisites>
		<maven>3.5.0</maven>
	</prerequisites>
	-->

	<modelVersion>4.0.0</modelVersion>
	<artifactId>chunks</artifactId>
	<groupId>net.darkmist</groupId>
	<packaging>bundle</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>${project.groupId}.${project.artifactId}</name>
	<description>Read Only Buffer Library for Java</description>
	<properties>
		<base.dir>${project.basedir}</base.dir>
		<base.groupId>net.darkmist.chunks</base.groupId>
		<pkg.name>${project.groupId}.${project.artifactId}</pkg.name>
		<shortName>chunks</shortName>

		<!--
		<target.version.major>1</target.version.major>
		<target.version.minor>8</target.version.minor>
		<target.version.micro>0</target.version.micro>
		<host.version>${java.specification.version}</host.version>
		<host.release>${java.specification.version}</host.release>
		<target.version>${target.version.major}.${target.version.minor}</target.version>
		-->
		<!--<target.version.minor>6</target.version.minor>-->
		<!--<target.vendor>ibm</target.vendor>-->
		<!--<target.vendor>oracle</target.vendor>-->

		<!-- general flags -->
		<skip.slow>false</skip.slow>
		<argLine>-Xmx12G</argLine><!-- surfire jvm arguments that jacoco will add too -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- animal sniffer -->
		<animal-sniffer.skip>${skip.slow}</animal-sniffer.skip>

		<!-- enforcer -->
		<enforcer.skip>${skip.slow}</enforcer.skip>
		<enforcer.fail>true</enforcer.fail>

		<!-- errorprone -->
		<errorprone.annotations.version>2.3.4</errorprone.annotations.version>
		<errorprone.compiler.version>2.8.6</errorprone.compiler.version>
		<errorprone.core.version>2.3.4</errorprone.core.version>

		<!-- javac -->
		<javac.method.parameters.reflection>true</javac.method.parameters.reflection>
		<javac.failOnWarning>true</javac.failOnWarning>
		<javac.verbose>false</javac.verbose>

		<!-- javadoc -->
		<javadoc.detectJavaApiLink>true</javadoc.detectJavaApiLink>
		<javadoc.detectLinks>true</javadoc.detectLinks>
		<javadoc.serialwarn>true</javadoc.serialwarn>
		<javadoc.verbose>true</javadoc.verbose>
		<javadoc.version>3.1.1</javadoc.version>

		<!--  jacoco -->
		<jacoco.version>0.8.5</jacoco.version>
		<jacoco.skip>${skip.slow}</jacoco.skip>

		<!-- pmd -->
		<pmd.skip>${skip.slow}</pmd.skip>
		<pmd.version>3.12.0</pmd.version>

		<!-- slf4j -->
		<slf4j.version>1.7.30</slf4j.version>

		<!-- log4j -->
		<log4j.version>2.13.1</log4j.version>

		<!-- spotbugs -->
		<spotbugs.fail>true</spotbugs.fail>
		<spotbugs.skip>${skip.slow}</spotbugs.skip>
		<spotbugs.plugin.version>3.1.12.2</spotbugs.plugin.version>
		<spotbugs.annotations.version>4.0.1</spotbugs.annotations.version>

		<!-- just versions -->
		<immutables.version>2.8.3</immutables.version>
		<junit.version>5.6.0</junit.version>
		<versions.version>2.7</versions.version>
	</properties>
	<profiles>

                <!--~~~~~~-.
                } versions {
                `-~~~~~~~-->
		
		<profile>
			<id>host-versions-1.x</id>
			<activation>
				<jdk>[1.8,1.9)</jdk>
			</activation>
			<properties>
				<host.version.major>1</host.version.major>
				<host.version.minor>8</host.version.minor>
				<host.version>${java.specification.version}</host.version>
				<target.release>${java.specification.version}</target.release>
				<target.version>${java.specification.version}</target.version>
			</properties>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-compiler-plugin</artifactId>
							<configuration>
								<source>${target.version}</source>
								<target>${target.version}</target>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
		<profile>
			<id>host-versions-x.0</id>
			<activation>
				<jdk>[9,14)</jdk>
			</activation>
			<properties>
				<host.version.major>${java.specification.version}</host.version.major>
				<host.version.minor>0</host.version.minor>
				<host.release>${java.specification.version}</host.release>
				<host.version>${java.specification.version}</host.version>
				<target.release>${java.specification.version}</target.release>
				<target.version>${java.specification.version}</target.version>
			</properties>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-compiler-plugin</artifactId>
							<configuration>
								<release>${target.version.release}</release>
								<source>${target.version}</source>
								<target>${target.version}</target>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>

                <!--~~~~~~~~-.
                } errorprone {
                `-~~~~~~~~~-->

		<profile>
			<id>compiler-errorprone</id>
			<activation>
				<!-- TOOLCHAINS -->
				<!-- errorprone only seems to support 1.6-9 -->
				<jdk>[1.6,10)</jdk>
				<property>
					<name>!env.SKIP_SLOW</name>
				</property>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-compiler-plugin</artifactId>
							<configuration>
								<compilerId>javac-with-errorprone</compilerId>
								<compilerArgs>
									<!-- NOTE: compilerArgs are NOT merged with defaults from project.build.pluginManagement -->

									<!-- DEFAULT --><arg>-Xlint</arg>
									<!-- DEFAULT --><arg>-Xlint:-processing</arg><!-- Silence warnings about annotations that weren't processed. -->
									<!-- DEFAULT --><arg>-implicit:class</arg>

									<!-- Error prone specific flags -->
									<!-- ok, so I'd like to enable LongLiteralLowerCaseSuffix but it thinks it's invalid so we have to enable all checks to getit which requires disableling the Android and Java 7 checks. -->
									<!-- Note: order is enable disable. Last match wins. -->
									<arg>-XepAllDisabledChecksAsWarnings</arg>
									<arg>-Xep:AndroidJdkLibsChecker:OFF</arg>
									<arg>-XepDisableWarningsInGeneratedCode</arg>
									<arg>-Xep:ImmutableRefactoring:OFF</arg>
									<arg>-Xep:Java7ApiChecker:OFF</arg>
									<!--<arg>-Xep:LongLiteralLowerCaseSuffix:WARNING</arg>-->
									<arg>-Xep:StaticOrDefaultInterfaceMethod:OFF</arg>
									<arg>-Xep:UnnecessaryParentheses:OFF</arg>
								</compilerArgs>
								<forceJavacCompilerUse>true</forceJavacCompilerUse>
							</configuration>
							<dependencies>
								<dependency>
									<groupId>org.codehaus.plexus</groupId>
									<artifactId>plexus-compiler-javac-errorprone</artifactId>
									<version>${errorprone.compiler.version}</version>
								</dependency>
								<dependency>
									<groupId>com.google.errorprone</groupId>
									<artifactId>error_prone_core</artifactId>
									<version>${errorprone.core.version}</version>
								</dependency>
							</dependencies>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>

                <!--~~~~~~~~~~~~-.
                } animal sniffer {
                `-~~~~~~~~~~~~~-->

		<profile>
			<id>animal-sniffer</id>
			<activation>
				<!-- So, I'm not seeing any signatures for 9+. -->
				<!-- TOOLCHAINS -->
				<jdk>[1.6,9)</jdk>
				<property>
					<name>!env.SKIP_SLOW</name>
				</property>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>animal-sniffer-maven-plugin</artifactId>
							<version>1.18</version>
							<configuration>
								<skip>${animal-sniffer.skip}</skip>
								<signature>
									<groupId>org.codehaus.mojo.signature</groupId>
									<artifactId>java${target.version}</artifactId>
									<!--<artifactId>java${target.version.major}${target.version.minor}</artifactId>-->
									<!-- FIXME: BLETCH: there is no way to get the major and minor. So how do we choose this? I guess we'll hard code it. -->
									<artifactId>java18</artifactId>
									<version>1.0</version>
								</signature>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>animal-sniffer-maven-plugin</artifactId>
						<executions>
							<!-- Configured here in the parent pom this will execute even for non-code modules -->
							<execution>
								<id>java version check</id>
								<phase>test</phase>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

                <!--~~~-.
                } tests {
                `-~~~~-->

		<profile>
			<id>noFileTest</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<excludes>
								<exclude>**/FileChunksTest*</exclude>
							</excludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

                <!--~~~~~~-.
                } enforcer {
                `-~~~~~~~-->

		<profile>
			<id>enforcer</id>
			<activation>
				<property>
					<name>!env.SKIP_SLOW</name>
				</property>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-enforcer-plugin</artifactId>
							<version>3.0.0-M3</version>
							<dependencies>
								<dependency>
									<groupId>org.codehaus.mojo</groupId>
									<artifactId>extra-enforcer-rules</artifactId>
									<version>1.2</version>
								</dependency>
							</dependencies>
							<configuration>
								<skip>${enforcer.skip}</skip>
								<rules>
									<banDistributionManagement/>
									<banDuplicatePomDependencyVersion/>
									<dependencyConvergence/>

									<!--<reactorModuleConvergence/> Using this results in failure to selectively compile submodules. -->
									<requireMavenVersion>
										<version>[3.5.0,)</version>
									</requireMavenVersion>
									<requireNoRepositories/>
									<!--<requirePluginVersions/> This fails to pickup versions defined in the parent. -->
									<!-- So this would be nice but it can't seem to exlude a module's parent being a snapshot so it is worthless
									<requireReleaseDeps>
										<excludes>
											<exclude>net.darkmist.modbus:*</exclude>
											<exclude>net.darkmist:*</exclude>
										</excludes>
									</requireReleaseDeps>
									-->
									<requireSameVersions>
										<dependencies>
											<dependency>org.slf4j</dependency>
										</dependencies>
										<dependencies>
											<dependency>org.apache.logging.log4j</dependency>
										</dependencies>
										<dependencies>
											<dependency>org.junit.jupiter</dependency>
										</dependencies>
										<dependencies>
											<dependency>org.immutables</dependency>
										</dependencies>
									</requireSameVersions>
									<requireUpperBoundDeps/>
	
									<!-- extra rules -->
									<banDuplicateClasses/>
									<banCircularDependencies/>
									<!-- This rule seems to be non-functional
									<requirePropertyDiverges>
										<property>base.dir</property>
									</requirePropertyDiverges>
									-->
									<enforceBytecodeVersion>
										<maxJdkVersion>${target.version}</maxJdkVersion>
									</enforceBytecodeVersion>
								</rules>
								<fail>${enforcer.fail}</fail>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<executions>
							<execution>
								<id>enforce</id>
								<goals>
									<goal>enforce</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

                <!--~~~~~~-.
                } spotbugs {
                `-~~~~~~~-->

		<profile>
			<id>spotbugs</id>
			<activation>
				<property>
					<name>!env.SKIP_SLOW</name>
				</property>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>com.github.spotbugs</groupId>
							<artifactId>spotbugs-maven-plugin</artifactId>
							<version>${spotbugs.plugin.version}</version>
							<configuration>
								<skip>${spotbugs.skip}</skip>
								<fork>false</fork>
								<effort>Max</effort>
								<threshold>Low</threshold>
								<failOnError>${spotbugs.fail}</failOnError>
								<excludeFilterFile>${base.dir}/spotbugs.xml</excludeFilterFile>
								<plugins>
									<!-- This may have issues with lambda functional interfaces -->
									<plugin>
										<groupId>com.h3xstream.findsecbugs</groupId>
										<artifactId>findsecbugs-plugin</artifactId>
										<version>1.8.0</version>
									</plugin>
									<plugin>
										<groupId>com.mebigfatguy.fb-contrib</groupId>
										<artifactId>fb-contrib</artifactId>
										<version>7.4.3.sb</version>
									</plugin>
								</plugins>
							</configuration>
            					</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>com.github.spotbugs</groupId>
						<artifactId>spotbugs-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>process-classes</phase>
								<goals>
									<goal>check</goal> 
								</goals>
							</execution>
						</executions>
            				</plugin>
				</plugins>
			</build>
		</profile>

                <!--~~~-.
                }  PMD  {
                `-~~~~-->

		<profile>
			<id>pmd</id>
			<activation>
				<property>
					<name>!env.SKIP_SLOW</name>
				</property>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-pmd-plugin</artifactId>
							<version>${pmd.version}</version>
							<configuration>
								<skip>${pmd.skip}</skip>
								<linkXref>false</linkXref>
								<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
								<targetJdk>${target.version.release}</targetJdk>
								<failOnViolation>true</failOnViolation>
								<printFailingErrors>true</printFailingErrors>
								<rulesets>
									<ruleset>${base.dir}/pmd.xml</ruleset>
								</rulesets>
								<excludeRoots>
									<excludeRoot>target/generated-sources/</excludeRoot>
								</excludeRoots>
								<verbose>true</verbose>
							</configuration>
							<executions>
								<execution>
									<phase>process-classes</phase>
									<goals>
										<goal>check</goal>
										<goal>cpd-check</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-pmd-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>check</goal>
									<goal>cpd-check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

                <!--~~~~~~~~-.
                } toolchains {
                `-~~~~~~~~~-->

		<profile>
			<id>toolchains</id>
			<activation>
				<!-- TOOLCHAINS -->
				<!-- not using presently -->
				<!--
				<property>
					<name>!env.SKIP_SLOW</name>
				</property>
				-->
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-toolchains-plugin</artifactId>
							<version>3.0.0</version>
							<configuration>
								<toolchains>
									<jdk>
										<version>${target.version}</version>
										<!--<vendor>${target.vendor}</vendor>-->
									</jdk>
								</toolchains>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-toolchains-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>toolchain</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

                <!--~~~~-.
                } jacoco {
                `-~~~~~-->

		<profile>
			<id>jacoco</id>
			<activation>
				<property>
					<name>!env.SKIP_SLOW</name>
				</property>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.jacoco</groupId>
							<artifactId>jacoco-maven-plugin</artifactId>
							<version>${jacoco.version}</version>
							<configuration>
								<excludes>
									<exclude>**/Immutable*</exclude>
									<!--
									<exclude>**/ImmutableLargeChunksHelper.*</exclude>
									<exclude>**/ImmutableLargeChunksHelper.InitShim.*</exclude>
									<exclude>**/ImmutableLargeChunksHelper$InitShim.*</exclude>
									-->
								</excludes>
								<jmx>true</jmx>
								<rules>
									<rule>
										<element>BUNDLE</element>
										<limits>
											<limit>
												<counter>COMPLEXITY</counter>
												<value>COVEREDRATIO</value>
												<minimum>0.10</minimum>
											</limit>
										</limits>
									</rule>
								</rules>
								<skip>${jacoco.skip}</skip>
							</configuration>
            					</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>default-prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>default-report</id>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
							<execution>
								<id>default-check</id>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

                <!--~~~~~-.
                } doxygen {
                `-~~~~~~-->

		<profile>
			<id>doxygen</id>
			<activation>
				<!--
				<property>
					<name>!env.SKIP_SLOW</name>
				</property>
				-->
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>com.soebes.maven.plugins</groupId>
							<artifactId>doxygen-maven-plugin</artifactId>
							<version>1.1.0</version>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
			<reporting>
				<plugins>
					<plugin><!-- Attempts at getting doxygen plugin to do what I would like it to. -->
						<groupId>com.soebes.maven.plugins</groupId>
						<artifactId>doxygen-maven-plugin</artifactId>
						<configuration>
			
							<!--<configurationFile>${project.baseDir}/doxyfile</configurationFile>-->
							<!--<configurationFile>doxyfile</configurationFile>-->
							
							<allexternals>false</allexternals>
							<alwaysDetailedSec>true</alwaysDetailedSec>
							<builtinStlSupport>false</builtinStlSupport>
							<callGraph>true</callGraph>
							<callerGraph>true</callerGraph>
							<!--<dotPath>/usr/bin/dot</dotPath>-->
							<enablePreprocessing>false</enablePreprocessing>
							<!-- despite docuementation to the contrary, this needs to be specified -->
							<executable>/usr/bin/doxygen</executable>
							<!--
							<extractAll>true</extractAll>
							<extractAnonNspaces>true</extractAnonNspaces>
							<extractLocalClasses>true</extractLocalClasses>
							<extractLocalMethods>true</extractLocalMethods>
							<extractPackage>true</extractPackage>
							<extractPrivate>true</extractPrivate>
							<extractStatic>true</extractStatic>
							-->
							<filePatterns>*.java</filePatterns>
							<hideUndocRelations>false</hideUndocRelations>
							<htmlDynamicSections>false</htmlDynamicSections>
							<!--<ignorePrefix>net.darkmist.chunks</ignorePrefix>-->
							<!--<inlineSources>true</inlineSources>-->
							<!--
							<internalDocs>true</internalDocs>
							-->
							<javadocAutobrief>true</javadocAutobrief>
							<optimizeOutputJava>true</optimizeOutputJava>
							<projectBrief>${project.description}</projectBrief>
							<projectNumber>${project.version}</projectNumber>
							<quiet>false</quiet>
							<recursive>true</recursive>
							<referencedByRelation>true</referencedByRelation>
							<referencesRelation>true</referencesRelation>
							<stripCodeComments>false</stripCodeComments>
							<templateRelations>true</templateRelations>
			
							<!-- use defaults -->
							<!--
							<alphabeticalIndex></alphabeticalIndex>
							<abbreviateBrief></abbreviateBrief>
							<aliases></aliases>
							<briefMemberDesc></briefMemberDesc>
							<caseSenseNames></caseSenseNames>
							<classDiagrams></classDiagrams>
							<classGraph></classGraph>
							<collaborationGraph></collaborationGraph>
							<colsInAlphaIndex></colsInAlphaIndex>
							<createSubdirs></createSubdirs>
							<destDir></destDir>
							<directoryGraph></directoryGraph>
							<disableIndex></disableIndex>
							<distributeGroupDoc></distributeGroupDoc>
							<docsetBundleId></docsetBundleId>
							<docsetFeedname></docsetFeedname>
							<dotCleanup></dotCleanup>
							<dotFontname></dotFontname>
							<dotFontpath></dotFontpath>
							<dotFontsize></dotFontsize>
							<dotGraphMaxNodes></dotGraphMaxNodes>
							<dotImageFormat></dotImageFormat>
							<dotMultiTargets></dotMultiTargets>
							<dotTransparent></dotTransparent>
							<dotfileDirs></dotfileDirs>
							<doxyfileEncoding></doxyfileEncoding>
							<enabledSections></enabledSections>
							<enumValuesPerLine></enumValuesPerLine>
							<examplePath></examplePath>
							<examplePatterns></examplePatterns>
							<exampleRecursive></exampleRecursive>
							<exclude></exclude>
							<excludePatterns></excludePatterns>
							<excludeSymbols></excludeSymbols>
							<excludeSymlinks></excludeSymlinks>
							<expandAsDefined></expandAsDefined>
							<expandOnlyPredef></expandOnlyPredef>
							<externalGroups></externalGroups>
							<fileVersionFilter></fileVersionFilter>
							<filterPatterns></filterPatterns>
							<filterSourceFiles></filterSourceFiles>
							<formulaFontsize></formulaFontsize>
							<fullPathNames></fullPathNames>
							<generateAutogenDef></generateAutogenDef>
							<generateBuglist></generateBuglist>
							<generateDeprecatedlist></generateDeprecatedlist>
							<generateDocset></generateDocset>
							<generateHtml></generateHtml>
							<generateLegend></generateLegend>
							<generateTagfile></generateTagfile>
							<generateTestlist></generateTestlist>
							<generateTodolist></generateTodolist>
							<generateTreeview></generateTreeview>
							<graphicalHierarchy></graphicalHierarchy>
							<groupGraphs></groupGraphs>
							<haveDot></haveDot>
							<hideFriendCompounds></hideFriendCompounds>
							<hideInBodyDocs></hideInBodyDocs>
							<hideScopeNames></hideScopeNames>
							<hideUndocClasses></hideUndocClasses>
							<hideUndocMembers></hideUndocMembers>
							<htmlAlignMembers></htmlAlignMembers>
							<htmlFileExtension></htmlFileExtension>
							<htmlFooter></htmlFooter>
							<idlPropertySupport></idlPropertySupport>
							<htmlHeader></htmlHeader>
							<htmlOutput></htmlOutput>
							<htmlStylesheet></htmlStylesheet>
							<imagePath></imagePath>
							<includeFilePatterns></includeFilePatterns>
							<includeGraph></includeGraph>
							<includePath></includePath>
							<includedByGraph></includedByGraph>
							<inheritDocs></inheritDocs>
							<inlineInfo></inlineInfo>
							<inlineInheritedMemb></inlineInheritedMemb>
							<input></input>
							<inputEncoding></inputEncoding>
							<inputFilter></inputFilter>
							<layoutFile></layoutFile>
							<macroExpansion></macroExpansion>
							<maxDotGraphDepth></maxDotGraphDepth>
							<maxInitializerLines></maxInitializerLines>
							<mscgenPath></mscgenPath>
							<optimizeForFortran></optimizeForFortran>
							<optimizeOutputVhdl></optimizeOutputVhdl>
							<outputDirectory></outputDirectory>
							<outputLanguage></outputLanguage>
							<paperType></paperType>
							<pdfHyperlinks></pdfHyperlinks>
							<perlPath></perlPath>
							<predefined></predefined>
							<projectName></projectName>
							<referencesLinkSource></referencesLinkSource>
							<repeatBrief></repeatBrief>
							<searchIncludes></searchIncludes>
							<searchengine></searchengine>
							<separateMemberPages></separateMemberPages>
							<shortNames></shortNames>
							<showDirectories></showDirectories>
							<showFiles></showFiles>
							<showIncludeFiles></showIncludeFiles>
							<showNamespaces></showNamespaces>
							<showUsedFiles></showUsedFiles>
							<sipSupport></sipSupport>
							<skipFunctionMacros></skipFunctionMacros>
							<sortBriefDocs></sortBriefDocs>
							<sortByScopeName></sortByScopeName>
							<sourceBrowser></sourceBrowser>
							<sortGroupNames></sortGroupNames>
							<sortMemberDocs></sortMemberDocs>
							<stripFromIncPath></stripFromIncPath>
							<stripFromPath></stripFromPath>
							<subgrouping></subgrouping>
							<symbolCacheSize></symbolCacheSize>
							<tabSize></tabSize>
							<tagfiles></tagfiles>
							<tocExpand></tocExpand>
							<treeviewWidth></treeviewWidth>
							<typedefHidesStruct></typedefHidesStruct>
							<umlLook></umlLook>
							<useHtags></useHtags>
							<verbatimHeaders></verbatimHeaders>
							<warnFormat></warnFormat>
							<warnIfDocError></warnIfDocError>
							<warnIfUndocumented></warnIfUndocumented>
							<warnLogfile></warnLogfile>
							<warnNoParamdoc></warnNoParamdoc>
							<warnings></warnings>
							-->
			
							<!-- htmlhelp -->
							<!--
							<binaryToc></binaryToc>
							<generateHtmlhelp></generateHtmlhelp>
							<hhcLocation></hhcLocation>
							-->
			
							<!-- rtf -->
							<!--
							<compactRtf></compactRtf>
							<generateRtf></generateRtf>
							<rtfExtensionsFile></rtfExtensionsFile>
							<rtfHyperlinks></rtfHyperlinks>
							<rtfOutput></rtfOutput>
							<rtfStylesheetFile></rtfStylesheetFile>
							-->
			
							<!-- latex -->
							<!--
							<compactLatex></compactLatex>
							<extraPackages></extraPackages>
							<generateLatex></generateLatex>
							<latexBatchmode></latexBatchmode>
							<latexCmdName></latexCmdName>
							<latexHeader></latexHeader>
							<latexHideIndices></latexHideIndices>
							<latexOutput></latexOutput>
							<makeindexCmdName></makeindexCmdName>
							<usePdflatex></usePdflatex>
							-->
			
							<!-- man -->
							<!--
							<generateMan></generateMan>
							<manExtension></manExtension>
							<manLinks></manLinks>
							<manOutput></manOutput>
							-->
			
							<!-- c++ -->
							<!--
							<cppCliSupport></cppCliSupport>
							<multilineCppIsBrief></multilineCppIsBrief>
							<optimizeOutputForC></optimizeOutputForC>
							-->
			
							<!-- chm -->
							<!--
							<chmFile></chmFile>
							<chmIndexEncoding></chmIndexEncoding>
							<generateChi></generateChi>
							-->
			
							<!-- perlmod -->
							<!--
							<generatePerlmod></generatePerlmod>
							<perlmodLatex></perlmodLatex>
							<perlmodMakevarPrefix></perlmodMakevarPrefix>
							<perlmodPretty></perlmodPretty>
							-->
			
							<!-- qt help -->
							<!--
							<generateQhp></generateQhp>
							<qchFile></qchFile>
							<qhgLocation></qhgLocation>
							<qhpNamespace></qhpNamespace>
							<qhpVirtualFolder></qhpVirtualFolder>
							<qtAutobrief></qtAutobrief>
							-->
			
							<!-- xml -->
							<!--
							<generateXml></generateXml>
							<xmlDtd></xmlDtd>
							<xmlOutput></xmlOutput>
							<xmlProgramlisting></xmlProgramlisting>
							<xmlSchema></xmlSchema>
							-->
						</configuration>
					</plugin>
				</plugins>
			</reporting>
		</profile>

	</profiles>
	<build>
		<defaultGoal>package</defaultGoal>
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<!-- FIXME: do we need this here? <extensions>true</extensions>-->
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<!-- FIXME: if we're using the bundle plugin do we need the jar plugin? -->
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>

                                <!--~~~~-.
                                } bundle {
                                `-~~~~~-->

				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>4.2.1</version>
					<extensions>true</extensions>
					<configuration>
						<instructions>
							<Export-Package>${project.groupId}.${project.artifactId}</Export-Package>
							<Bundle-Name>${project.groupId}.${project.artifactId}</Bundle-Name>
						</instructions>
					</configuration>
				</plugin>

                                <!--~~~~~~-.
                                } compiler {
                                `-~~~~~~~-->

				<plugin>
					<!-- Defaults for compiler before all the profiles... -->
					<!-- TOOLCHAINS -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.1</version>
					<configuration>
						<annotationProcessorPaths>
							<path>
								<groupId>org.immutables</groupId>
								<artifactId>value-processor</artifactId>
								<version>${immutables.version}</version>
							</path>
						</annotationProcessorPaths>
						<compilerArgs><!-- These are not merged with profiles -->
							<arg>-Xlint</arg>

							<arg>-Werror</arg>
							<!-- Silence warnings/etc from generated code: error prone specific -->
							<!--<arg>-XepDisableWarningsInGeneratedCode</arg>-->

							<!-- Silence warnings about annotations that weren't processed. -->
							<arg>-Xlint:-processing</arg>
							<arg>-implicit:class</arg>

							<!-- for picocli annotation procesor -->
							<!--<arg>-Aproject=${project.groupId}/${project.artifactId}</arg>-->

							<!-- for class path isssues -->
							<!--<arg>-Xlint:-path</arg>-->
						</compilerArgs>
						<compilerId>javac</compilerId>
						<!-- PARALLEL -->
						<!--<compilerReuseStrategy>alwaysNew</compilerReuseStrategy>--><!-- this should always work in parallel -->
						<debug>true</debug>
						<failOnWarning>${javac.failOnWarning}</failOnWarning>
						<!-- <optimize>true</optimize> This is a noop in javac now apparently. -->
						<parameters>${javac.method.parameters.reflection}</parameters><!-- reflection of method arguments and the like -->
						<showDeprecation>true</showDeprecation>
						<showWarnings>true</showWarnings>
						<verbose>${javac.verbose}</verbose>
					</configuration>
				</plugin>

                                <!--~~~~~~-.
                                } surefire {
                                `-~~~~~~~-->

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.0.0-M4</version>
					<configuration>
						<!--<parallel>all</parallel>-->
							<!--<reuseForks>false</reuseForks>-->
						<systemPropertyVariables>
							<skip.slow>${skip.slow}</skip.slow>
						</systemPropertyVariables>
						<trimStackTrace>false</trimStackTrace>
					</configuration>
				</plugin>


                                <!--~~~~~~~~~~-.
                                } version only {
                                `-~~~~~~~~~~~-->

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>3.1.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>3.0.0-M1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>3.0.0-M1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jarsigner-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.8.2</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${versions.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<dependencies>
		<!-- logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>compile</scope>
		</dependency>

		<!-- immutable value types -->
		<dependency>
			<groupId>org.immutables</groupId>
			<artifactId>value-annotations</artifactId>
			<scope>compile</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.immutables</groupId>
			<artifactId>annotate</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- annotations -->
		<dependency>
			<groupId>com.google.errorprone</groupId>
			<artifactId>error_prone_annotations</artifactId>
			<scope>compile</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.github.spotbugs</groupId>
			<artifactId>spotbugs-annotations</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>net.jcip</groupId>
			<artifactId>jcip-annotations</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- testing -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.immutables</groupId>
				<artifactId>value-annotations</artifactId>
				<version>${immutables.version}</version>
			</dependency>
			<dependency>
				<groupId>org.immutables</groupId>
				<artifactId>annotate</artifactId>
				<version>${immutables.version}</version>
			</dependency>

			<!-- testing -->
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-api</artifactId>
				<version>${junit.version}</version>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-params</artifactId>
				<version>${junit.version}</version>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-engine</artifactId>
				<version>${junit.version}</version>
			</dependency>

			<!-- log4j -->
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-api</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-core</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-slf4j-impl</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			
			<!-- sl4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<!-- annotations -->
			<dependency>
				<groupId>com.google.code.findbugs</groupId>
				<artifactId>jsr305</artifactId>
				<version>3.0.2</version>
			</dependency>
			<dependency>
				<groupId>com.google.errorprone</groupId>
				<artifactId>error_prone_annotations</artifactId>
				<version>${errorprone.annotations.version}</version>
			</dependency>
			<dependency>
				<groupId>net.jcip</groupId>
				<artifactId>jcip-annotations</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-annotations</artifactId>
				<version>${spotbugs.annotations.version}</version>
				<optional>true</optional>
			</dependency>

			<!-- easymock -->
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>4.2</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<reporting>
		<plugins>
			<!-- make pmd shut up -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>3.0.0</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${javadoc.version}</version>
				<configuration>
					<detectJavaApiLink>${javadoc.detectJavaApiLink}</detectJavaApiLink>
					<detectLinks>${javadoc.detectLinks}</detectLinks>
					<serialwarn>${javadoc.serialwarn}</serialwarn>
					<verbose>${javadoc.verbose}</verbose>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>javadoc</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${pmd.version}</version>
				<configuration>
					<linkXref>true</linkXref>
					<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
					<targetJdk>${target.version}</targetJdk>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>${versions.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>dependency-updates-report</report>
							<report>plugin-updates-report</report>
							<report>property-updates-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>${spotbugs.plugin.version}</version>
            		</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
							<!-- select non-aggregate reports -->
				<!--
				-->
				<reportSets>
					<reportSet>
						<reports>
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
			        <groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
				<version>2.0</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<tagListOptions>
						<tagClasses>
							<tagClass>
								<displayName>Todo Work</displayName>
								<tags>
									<tag>
										<matchString>todo</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
									<tag>
										<matchString>FIXME</matchString>
										<matchType>exact</matchType>
									</tag>
								</tags>
							</tagClass>
						</tagClasses>
					</tagListOptions>
				</configuration>
			</plugin>	
		</plugins>
	</reporting>
</project>
